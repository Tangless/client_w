import * as ptcache from '@po-to/pt-cache';
import * as funs from 'views/global/common/Funs';

let apiServer = "`{APIURL}`";
export function SendSmsCaptcha(phone:string,success?: (data: boolean) => void, fail?: (error: Error) => void): Promise<boolean> {
    return ptcache.load({ url: apiServer+'/SmsCaptcha/getSmsCaptcha4Login', data:{phone:phone} , method:"post", render:function(data){
            return data;
    } }, success, fail);
}
export function Login(phone:string,sms_captcha:string,success?: (data: boolean) => void, fail?: (error: Error) => void): Promise<boolean>{
    return ptcache.load({ url: apiServer+'/Login/handleLogin', data:{phone:phone,sms_captcha:sms_captcha} , method:"post", render:function(data){
            if(!(data instanceof Error)){
                funs.setCookie("token",data.token,1);
            }
            return data;
    } }, success, fail);
}
export function Logout(success?: (data: boolean) => void, fail?: (error: Error) => void): Promise<boolean>{
    return ptcache.load({ url: apiServer+'/Login/handleLogout', data:{} , method:"post", render:function(data){
            if(!(data instanceof Error)){
                funs.setCookie("token",'');
            }
            return data;
    } }, success, fail);
}
export function CreateDemand(data:{phone:string,nick:string,type:number,size:number,color:number,location:number,span:string,city:number},success?: (data: {demand_id:string,send_sms_captcha:number}) => void, fail?: (error: Error) => void): Promise<boolean>{
    return ptcache.load({ url: apiServer+'/Demand/postDemand', data:data , method:"post", render:function(data){
            console.log(data);
            return data;
    } }, success, fail);
}
export function ActivateDemand(data:{phone:string,demand_id:number,sms_captcha:number},success?: (data: any) => void, fail?: (error: Error) => void): Promise<any>{
    return ptcache.load({ url: apiServer+'/Demand/activateDemand', data:data , method:"post", render:function(data){
            console.log(data);
            if(!(data instanceof Error)){
                funs.setCookie("token",data.token,1);
            }
            return data;
    } }, success, fail);
}
export function EditDemand(data:{demand_id:number,type:number,size:number,color:number,location:number,span:string,budget:number,address:string,note:string},success?: (data: boolean) => void, fail?: (error: Error) => void): Promise<boolean>{
    return ptcache.load({ url: apiServer+'/Demand/updateDemand', data:data , method:"post", render:function(data){
            if(!(data instanceof Error)){
                return true;
            }
            return data;
    } }, success, fail);
}
export function CreateImGroup(data:{ demand_id:number},success?: (data: boolean) => void, fail?: (error: Error) => void): Promise<boolean>{
    return ptcache.load({ url: apiServer+'/Im/initIm4Demand', data:data , method:"post", render:function(data){
            if(!(data instanceof Error)){
                return true;
            }
            return data;
    } }, success, fail);
}
export function GetDemandSupplier(data:{ demand_id:number},success?: (data: any) => void, fail?: (error: Error) => void): Promise<any>{
    return ptcache.load({ url: apiServer+'/Supplier/getSupplierList4Demand', data:data , method:"post", render:function(data){
            return data;
    } }, success, fail);
}
export function GetImHistoryMsgs(data:{ group_id:number,end_tm:number,pagesize?:number},success?: (data: any) => void, fail?: (error: Error) => void): Promise<any>{
    return ptcache.load({ url: apiServer+'/Im/getGroupImList', data:data , method:"post",hideLoading:true, render:function(data){
            return data;
    } }, success, fail);
}
export function GetImHistoryMsgsCache(data:{ group_id:number},success?: (data: any) => void, fail?: (error: Error) => void): Promise<any>{
    return ptcache.load({ url: apiServer+'/Im/getGroupLatestImList', data:data , method:"post",hideLoading:true, render:function(data){
            return data;
    } }, success, fail);
}
export function SavePrivateGroup(data:{ group_id:number,sub_val:number,type?:number,val:number},success?: (data: boolean) => void, fail?: (error: Error) => void): Promise<boolean>{
    return ptcache.load({ url: apiServer+'/Im/saveImGroup', data:data , method:"post", render:function(data){
            return data;
    } }, success, fail);
}
export function UpdateSupplierChatStatus(data:{ demand_id:number,has_chat:number},success?: (data: boolean) => void, fail?: (error: Error) => void): Promise<boolean>{
    return ptcache.load({ url: apiServer+'/Im/updateDemandImChatStatus4User', data:data , method:"post", render:function(data){
            if(!(data instanceof Error)){
                return true;
            }
            return data;
    } }, success, fail);
}
declare let exports:any;
window['api'] = exports;
