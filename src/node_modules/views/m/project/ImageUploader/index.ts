import * as tomato from "@po-to/tomato";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as model from "views/global/common/Model";
import * as Vue from "vue";
import css = require("./css");
import * as api from "views/global/common/API";

class VPresenter extends project.VPresenter {
    /**模块 */
    private ImageUploader_vue: any;
    /**预览图片 */
    private img;
    private preview;
    /**上次input控件 */
    private inputUpload;
    private btnUpload: JQuery;
    /**demand */
    private demand;
    private file;
    private tempImg: HTMLImageElement;

    // private form;
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        var that = this;
        var canvas = document.createElement('canvas');
        this.tempImg = document.createElement("img");
        $('body').append(this.tempImg);
        this.tempImg.onload = function (event) {
            var img = $(this);
            img.width((img[0] as HTMLImageElement).naturalWidth);
            img.height((img[0] as HTMLImageElement).naturalHeight);
            if (img.width() > 500) {//按最大高度等比缩放
                var rate = 500 / img.width();
                img.height(img.height() * rate);
                img.width(500);

            }
            var ctx = canvas.getContext("2d");
            if (ctx) {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                canvas.width = img.width();
                canvas.height = img.height();
                ctx.drawImage(img[0] as HTMLImageElement, 0, 0, img.width(), img.height());
                that.demand.image = canvas.toDataURL("image/jpeg");
                that.setImg();
            }
        }
        var aaa = css;//hack
        var user = model.globalData.user;
        var demand = this.demand = model.globalData.demand;

        this.preview = this.find(".preview");
        this.btnUpload = this.find(".btn-upload ");
        this.inputUpload = this.find(".input-upload");
        /**删除预览 */
        this.preview.on('click', function () {
            that.demand.image = '';
            that.setImg();
        });
        /**预览上传图片 */
        this.inputUpload.on('change', function (event) {
            // 根据这个 <input> 获取文件的 HTML5 js 对象
            var files = event.target.files, file;
            if (files && files.length > 0) {
                // 获取目前上传的文件
                file = that.file = files[0];
                // 来在控制台看看到底这个对象是什么
                console.log(file);
                // 那么我们可以做一下诸如文件大小校验的动作
                // if (file.size > 1024 * 1024 * 2) {
                //     alert('图片大小不能超过 2MB!');
                //     return false;
                // }

                // 图片预览 function 1
                if (window['FileReader']) {
                    var reader = new FileReader();
                } else {
                    alert("您的设备不支持图片预览功能，如需该功能请升级您的设备！");
                }
                var reader = new FileReader();
                var imageType = /^image\//;
                //是否是图片
                if (!imageType.test(file.type)) {
                    alert("请选择图片！");
                    return;
                }
                reader.readAsDataURL(file);

                reader.onload = function (f) {
                    if (!this.result) return false;
                    that.tempImg.src =this.result;
                };

            }
        });
        this.setImg();
        //this._watchEvent();
    }

    /**压缩 */
    // private compressImg(imgData, maxWidth, onCompress) {
    //     if (!imgData) return false;
    //     onCompress = onCompress || function () { };
    //     this.tempImg.src =
        
    //     var img = $('<img>', {
    //         // class: 'hidden',
    //         src: imgData
    //     })
    //     img.on('load', function () {

    //         if (img.width() > maxWidth) {//按最大高度等比缩放
    //             var rate = maxWidth / img.width();
    //             img.height(img.height() * rate);
    //             img.width(maxWidth);
    //         }

    //         var ctx = canvas.getContext("2d");
    //         if (ctx) {
    //             ctx.clearRect(0, 0, canvas.width, canvas.height);
    //             canvas.width = img.width();
    //             canvas.height = img.height();
    //             ctx.drawImage(img[0] as HTMLImageElement, 0, 0, img.width(), img.height());
    //             onCompress(canvas.toDataURL("image/jpeg"));
    //             img.attr('src', canvas.toDataURL("image/jpeg"));
    //             //  $('body img').remove();  
    //             // this.demand.image = canvas.toDataURL("image/jpeg");//保存图片压缩后的64位编码
    //             // this.setImg();
    //         }
    //     });
    //     $('body').append(img);



    // }
    /** 初始化*/
    private setImg() {
        /**是否有图片 */
        if ("" == this.demand.image) {
            this.preview.addClass("hide");
            this.btnUpload.removeClass("hide");
        } else {
            this.btnUpload.addClass("hide");
            this.preview.removeClass("hide");
        }
    }

    /**上传文件，参数:文件地址 */
    public fileUpload() {
        var that = this;
        var demand_id = this.demand.id;
        var formData = new FormData();
        formData.append('demand_id', demand_id);
        formData.append('file', that.file);
        $.ajax({
            xhrFields: { withCredentials: true },
            url: 'http://dev.v2.api.wanpinghui.com/Img/uploadDemandPlaceImage',
            type: 'POST',
            cache: false,
            data: formData,
            processData: false,
            contentType: false
        }).done(function (json) {
            console.log("::" + json.image);
            model.globalData.demand.image = json.image;
        }).fail(function (json) { });
    }
}
export = VPresenter;