import * as tomato from "@po-to/tomato";
import * as tdom from "@po-to/tomato-jquery";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as api from "views/global/common/API";
import * as model from "views/global/common/Model";
import * as Vue from 'vue';
import edit = require('views/m/project/EditCurrentItem');
import code = require('views/m/user/Code');

class VPresenter extends project.VPresenter {
    private currSessIsOthers: boolean;//当前会话是否是别人的项目会话
    private selfInfo: any;//自己的用户信息
    private selfProject: any;//自己的项目信息
    private selfDemandId: any;//自己的项目id
    private currDemandId: any;//当前项目id
    private selfChatRoomId: any;//自己的项目群聊id
    private currChatRoomId: any;//当前群聊id
    private tempProject: any;//当前临时的项目
    private privateGroupList: any;//自己的项目的私聊群列表
    private webim: any;
    private webim2: any;
    private webim3: any;
    private proInfo: any;
    private footer: tomato.VPresenter;
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        this._watchEvent();
        this._els = this._getElements();
        var that = this;
        /**===================聊天室页面渲染===================== */
        //详情页渲染
        var v_details = this.find('.details')[0];
        var data = model.globalData;
        this.proInfo = new Vue({

            el: v_details,
            data: data,
            methods: {
                slideUp: function (event) {
                    var detail = $(this.$el);
                    var flag = detail.next('.chat').css('display') == "none";
                    var isSelf = (this as any).currIsSelfDemand;
                    if (flag) {
                        if (isSelf) {
                            detail.addClass("slide-up-self").find('.c-info').hide();
                            detail.find('.c-details').show();
                            detail.find('.my-up').hide();
                        } else {
                            detail.addClass("slide-up");
                            detail.find('.my-up').addClass("my-down");
                        }
                        detail.next('.chat').show();
                    } else {
                        if (isSelf) {
                            detail.removeClass("slide-up-self").find('.c-info').show();
                            detail.find('.c-details').hide();
                            detail.find('.my-up').show();
                        } else {
                            var bottom = '-58rem';
                            if (model.globalData.demand.id && model.globalData.user.user_type != 0) {
                                bottom = '0';
                            }
                            detail.removeClass("slide-up");
                            detail.find('.my-up').removeClass("my-down").css('bottom', bottom);
                        }
                        detail.next('.chat').hide();
                    }
                    var wh = document.documentElement.clientHeight || $(window).height();
                    if (isSelf) {
                        detail.parents('#ChatRoom').find('.group-list').show();
                        detail.parents('#ChatRoom').find('.input-pane').show();
                        detail.parents('#ChatRoom').find('#input').show();

                        var dh = 56;//detail.outerHeight();
                        var th = 40;//detail.parents('#ChatRoom').find('.TopBar').outerHeight();
                        var gh = 67;//detail.parents('#ChatRoom').find('.group-list').outerHeight();
                        var ih = 47;//detail.parents('#ChatRoom').find('#input').outerHeight();
                        var ch = wh - dh - th - gh - ih;
                        detail.parents('#ChatRoom').find('.chat-pane').css("height", ch / 100 + 'rem');
                    } else {
                        detail.parents('#ChatRoom').find('.group-list').hide();
                        detail.parents('#ChatRoom').find('.input-pane').hide();
                        detail.parents('#ChatRoom').find('#input').hide();

                        var dh = 275;//detail.outerHeight();
                        var th = 40;//detail.parents('#ChatRoom').find('.TopBar').outerHeight();
                        var ih = 47;//detail.parents('#ChatRoom').find('#input').outerHeight();
                        var ch = wh - dh - th - 58;
                        detail.parents('#ChatRoom').find('.chat-pane').css("height", ch / 100 + 'rem');
                    }
                },
                slideDown: function () {
                    var bottom = '-58rem';
                    if (model.globalData.demand.id && model.globalData.user.user_type != 0) {
                        bottom = '0';
                    }
                    var detail = $(this.$el);
                    var isSelf = (this as any).currIsSelfDemand;
                    if (isSelf) {
                        detail.removeClass("slide-up-self slide-up").find('.c-info').show();
                        detail.find('.c-details').hide();
                        detail.next('.chat').hide();
                        detail.find('.my-up').removeClass("my-down").css('bottom', bottom).show();
                    } else {
                        detail.removeClass("slide-up slide-up-self");;
                        detail.find('.my-up').css('bottom', bottom).removeClass("my-down");
                    }
                },
                openEdit: function () {
                    tomato.getVPresenter<edit>(funs.moduleToUrl('m/project/EditCurrentItem'), (edit) => {
                        var type = model.globalData.demand.type;
                        funs.loadPage(edit);
                        edit.setInit(type);
                    })

                }
            }
        });

        //聊天列表渲染
        if (model.globalData.demand.id) {
            var v_suppliers = this.find('.scroll-pane')[0];
            var suppliers = model.globalData.demand.supplier_list;
            new Vue({
                el: v_suppliers,
                data: {
                    supplier_list: suppliers
                },
                computed: {
                    //过滤type==0的工程商（即没有“参与”的）
                    realJoined: function () {
                        return (this as any).supplier_list.filter(function (s) {
                            if (s.avatar == '') {
                                s.fir_nick = s.nick.substr(0, 1);
                            }
                            return s.type > 0
                        })
                    }
                },
                methods: {
                    clientChangeChat: function (event) {
                        //切换会话
                    }
                }
            });
            this.find('.gchat').attr('gid', model.globalData.demand.im_group.im_group_outer_id);
            this.find('.vip').attr('gid', model.globalData.demand.im_group.client_csad_im_group_outer_id);
        }
        //更改预算金额显示
        this.setBudget();
        //聊天界面
        var msgPane = this.find('.chat-pane');
        //输入框输入事件监听
        this.find('#input').on('input propertychange blur', function () {
            //聊天面板滚到底部3t
            msgPane[0].scrollTop = msgPane[0].scrollHeight;
            // $("html,body").animate({scrollTop:9999},100);
            // this.scrollIntoView();

            var v = $(this).val();
            if (v.length > 0 && v.trim().length > 0) {
                that.find('#sendMsg').removeClass("hide").removeAttr('disabled');
                that.find('.enclosure').addClass("hide");
            } else {
                $(this).css('height', '26px');
                that.find('#sendMsg').addClass("hide").attr('disabled', 'disabled');
                that.find('.enclosure').removeClass("hide");
            }
        }).on('focus', function () {
            // $(that.view[0]).animate({ scorllTop: 9999 }, 100);
            // $(that.view[0]).parent().animate({ scorllTop: 9999 }, 100);
        });
        //监听窗口缩放事件
        $(window).resize(function () {
            msgPane[0].scrollTop = msgPane[0].scrollHeight;
        });
        //监听消息发送提交
        this.find('.input-pane').on('submit', function (e) {
            e.preventDefault();
            that._evt_sendMsg();
        });
        //图片选择事件
        $('#imgFile').on('change', function () {
            webimConfigs.sendImage();
        });
        //录音时长显示
        var audio = this.find('#audioTag');
        if (audio) {
            audio.on("loadstart canplaythrough durationchange", function () {
                this.find('.audio-time').text(that.transTime(this.duration));
            });
        }

        /**====================聊天室逻辑====================== */
        this.selfInfo = model.globalData.user;
        this.selfProject = model.globalData.demand;
        this.tempProject = model.globalData.current_demand;
        this.currChatRoomId = model.globalData.current_demand.im_group.im_group_outer_id || '0000';
        this.selfChatRoomId = model.globalData.demand.im_group.im_group_outer_id;
        this.privateGroupList = [];

        //消息监听
        this.webim = {
            session: '',
            messages: { history: [], news: [] },
            update: function (msgs) {
                var html = '';
                for (var i = 0, j = msgs.length; i < j; i++) {
                    if (that.currSessIsOthers) {
                        html = html + that.othersPushMsg(msgs[i]);
                    } else {
                        html = html + that.pushMsg(msgs[i]);
                    }
                }
                msgPane.append(html);

                var delayTime = 300;
                //如果消息中没有图片,就加快显示速度
                if (html.indexOf('chat-img') < 0) {
                    delayTime = 30;
                }

                //图片加载需要时间,延迟滚动
                setTimeout(function () {
                    msgPane[0].scrollTop = msgPane[0].scrollHeight;
                }, delayTime);

                var id = this.session;
                var lastMsg = msgs[msgs.length - 1].text;
                if (lastMsg.indexOf('chat-img') > 0) {
                    lastMsg = '[图片]'
                }
                $('.group-item[gid="' + id + '"]').find('.last-msg').html(lastMsg);
            },
            history: function (msgs) {
                var html = '';
                for (var i = 0; i < msgs.length; i++) {
                    if (that.currSessIsOthers) {
                        html = that.othersPushMsg(msgs[i]) + html;
                    } else {
                        html = that.pushMsg(msgs[i]) + html;
                    }
                }
                if (that.selfInfo.user_id == '1' || that.currSessIsOthers) {
                    msgPane.append(html);
                } else {
                    msgPane.prepend(html);
                }

                //图片加载需要时间,延迟滚动
                setTimeout(function () {
                    msgPane[0].scrollTop = msgPane[0].scrollHeight;
                }, 500);
            }
        };
        //客户监听群聊消息,以实时更新聊天群列表
        this.webim2 = {
            session: that.selfDemandId,
            messages: { history: [], news: [] },
            update: function (msgs) {
                if (nim.currSess != that.selfDemandId) {
                    for (var i = 0, j = msgs.length; i < j; i++) {
                        var msg = msgs[i];
                        var fromAccount = msg.from;
                        var merberInfo: any = that._getCurrentGroupMember(fromAccount);
                        if (msg.type == 'notification') {
                            return
                        }
                        //如果发消息的人不存在当前群里边(即 新参与的工程商)
                        if (!merberInfo || merberInfo.type == 0) {
                            //重新取一遍参与的工程商列表信息(延时执行:防止后台接口数据更新延迟)
                            setTimeout(function () {
                                that._getCurrentGroup({
                                    succ: function () {
                                        console.log('更新参与的工程商信息成功')
                                    }
                                });
                            }, 2000);
                        }
                    }
                }
            },
            history: function () {
            }
        };
        //客户监听所有消息,以实时更新聊天未读消息及群租
        this.webim3 = {
            session: 'all',
            messages: { history: [], news: [] },
            update: function (msgs) {
                var private_unread_num = 0, group_unread_num = 0;;

                $.each(msgs, function (key, value) {
                    //其他会话的未读消息处理
                    if (value.news && value.unread > 0) {
                        if (value.unread > 9) {
                            value.unread = '…';
                        }
                        if (value.lastMsg.text.indexOf('chat-img') > 0) {
                            value.lastMsg.text = '[图片]'
                        }
                        //如果是私聊群的消息
                        if (!that._hasPrivateGroup(key) && key != that.selfDemandId) {
                            //重新取一遍参与的工程商列表信息(延时执行:防止后台接口数据更新延迟)
                            setTimeout(function () {
                                that._getCurrentGroup({});
                            }, 2000);
                        } else if (key != nim.currSess) {
                            var item = $('.group-item[gid="' + key + '"]');
                            item.find('.unread-num').html(value.unread).show();
                        }
                        if (key != nim.currSess) {
                            if (key == that.selfProject.im_group.client_csad_im_group_outer_id) {
                                var vip = $('.vip');
                                vip.find('.unread-num').html(value.unread).show();
                            }
                            if (key == that.selfDemandId) {
                                var gchat = $('.gchat');
                                gchat.find('.unread-num').html(value.unread).show();
                            }
                        }
                    }

                });
            }
        };


        //当chatroom的value等于open时，打开聊天弹框，并且清除chatroom。防止下次刷新再打开
        if (localStorage.getItem("chatroom") == 'open') {
            this.openChatRoom();
            localStorage.removeItem("chatroom");
        }
        webimConfigs.addListener(this.webim);
        webimConfigs.addListener(this.webim2);
        webimConfigs.addListener(this.webim3);
    }
    //打开发布项目时的聊天窗
    openTempChatRoom = function () {
        //重置自己项目的聊天
        if (!this.find('.gchat').hasClass('active')) {
            this.find('.group-list').find('.active').removeClass('active');
            this.find('.gchat').addClass('active');
        }
        this.currSessIsOthers = false;
        this.find('.group-list').show();
        this.find('.input-pane').show();
        this.find('.my-up').hide();
        // this.find('.chat').css("padding-bottom", '47px');
        //弹出验证码
        tomato.getVPresenter<code>(funs.moduleToUrl('m/user/Code'), (code) => {
            var did = model.globalData.demand.id;
            code.setDemandId(did);
            tdom.open(code, tdom.DialogTarget.Blank, {
                size: { width: '90%', height: tomato.DialogSize.Content },
                masked: true,
            });
        });
    }
    //打开聊天室并切换到会话
    openChatRoom = function () {
        this.selfDemandId = model.globalData.demand.id;
        this.currDemandId = model.globalData.current_demand.id;
        this.currChatRoomId = model.globalData.current_demand.im_group.im_group_outer_id || '0000';
        this.find('.chat-pane').html('');
        // this.proInfo.slideUp();
        //打开自己的项目的聊天室
        if (this.selfDemandId && this.selfDemandId == this.currDemandId) {
            //重置自己项目的聊天
            if (!this.find('.gchat').hasClass('active')) {
                this.find('.group-list').find('.active').removeClass('active');
                this.find('.gchat').addClass('active');
            }
            $('.tdom-footer').hide();
            this.currSessIsOthers = false;
            if (0 == this.selfProject.im_group.im_group_outer_id) {
                console.error('抱歉，创建群组失败. demand id: ' + this.selfDemandId);
            }
            this.find('.group-list').show();
            this.find('.input-pane').show();
            this.find('.c-info').hide();
            this.find('.c-details').show();
            this.find('.my-up').hide();
            // this.find('.v-edit').hide();
            // this.find('.chat').css("padding-bottom", '47px');
            this.switchSession(this.currChatRoomId);
        } else {
            $('.tdom-footer').show();
            this.currSessIsOthers = true;
            this.find('.group-list').hide();
            this.find('.input-pane').hide();
            this.find('.my-up').addClass('my-down').show();
            this.find('.c-info').show();
            this.find('.details').addClass('slide-up');
            this.find('.chat').css("padding-bottom", '0');
            this.switchSession(this.currChatRoomId, true);
        }
        this.find('.chat').show();
        this._setChatHeight()
    };
    //切换聊天对象 更新设置
    switchSession(sessionID, isOthersGroup?) {
        var isLargeGroup = false;
        if (sessionID == model.globalData.demand.im_group.im_group_outer_id) {
            isLargeGroup = true;
        }
        if (isOthersGroup) {
            isLargeGroup = true;
        }
        webimConfigs.setCurrSession(sessionID, isLargeGroup);
        $('.group-item[gid="' + sessionID + '"]').find('.unread-num').hide().html('');
        this.webim.session = sessionID;
        this.webim.messages = { history: [], news: [] };
    };
    //在聊天窗口显示消息
    pushMsg(msg) {
        var that = this;
        var fromAccount = msg.from;
        var isSelfSend = msg.flow == 'out';//消息是否为自己发的
        var subType = msg.type;//消息类型
        var triangle, userhead;
        var onemsg = '';
        //群普通消息
        if (subType == 'text') {

            //查询消息成员的资料
            var memberInfo: any = that._getCurrentGroupMember(fromAccount);

            //如果自己发的消息
            if (isSelfSend) {
                userhead = '<span class="user-head-icon">您</span>';
                //小三角
                triangle = '<img class="triangle" src="`{VIEWSURL}`/m/ChatRoomTpl/images/triangle.png">';

                onemsg = '<div class="one-message self-msg">' + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>'
            }
            //不是自己发的消息
            else {
                var msghead = '';

                if (memberInfo) {
                    var src2 = memberInfo.avatar;
                    userhead = '<img class="user-head-icon" src="' + src2 + '"/>';
                    //如果是第一次发言,则更新工程商的列表信息
                    if (memberInfo.type == 0) {
                        //适当延迟,等待数据更新
                        setTimeout(function () {
                            that._getCurrentGroup({
                                succ: function () {
                                    console.log('更新参与的工程商信息成功')
                                }
                            });
                        }, 2000);
                    }
                    if (memberInfo.company_name) {
                        msghead = '<div class="msgfrom-info">' + memberInfo.nick + '<span class="msgfrom-company">&nbsp;|&nbsp;' + memberInfo.company_name + '</span></div>'
                    } else {
                        msghead = '<div class="msgfrom-info">' + memberInfo.nick + '</div>'
                    }

                } else if (!memberInfo && fromAccount != '3') {
                    userhead = '<img class="user-head-icon" head="' + fromAccount + '"/>';
                    msghead = '<div class="msgfrom-info" msghead="' + fromAccount + '"></div>';
                    //防止过快请求数据没有更新
                    setTimeout(function () {
                        that._getCurrentGroup({
                            succ: function () {
                                memberInfo = that._getCurrentGroupMember(fromAccount);
                                var src = memberInfo.avatar;
                                $('.user-head-icon[head="' + fromAccount + '"]').attr('src', src);
                                var innerhtml;
                                if (memberInfo.company_name) {
                                    innerhtml = memberInfo.nick + '<span class="msgfrom-company">&nbsp;|&nbsp;' + memberInfo.company_name + '</span>';
                                } else {
                                    innerhtml = memberInfo.nick;
                                }
                                $('.user-head-icon[msghead="' + fromAccount + '"]').html(innerhtml);

                                console.log('更新参与的工程商信息成功');
                            }
                        });
                    }, 2000);
                }

                //小三角
                triangle = '<img class="triangle" src="`{VIEWSURL}`/m/ChatRoomTpl/images/triangle2.png">';

                onemsg = '<div class="one-message">' + msghead + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>'
            }
            //如果是万屏汇客服发的消息 , 默认头像
            if (fromAccount == '3') {
                var src3 = '`{VIEWSURL}`/m/ChatRoomTpl/images/xiaohui.png';
                userhead = '<img class="user-head-icon" src="' + src3 + '"/>';
                //小角标
                var vip = '<span class="icon-vip"></span>';
                msghead = '<div class="msgfrom-info">客服代表</div>';

                onemsg = '<div class="one-message">' + msghead + vip + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>'
            }


            //群提示消息
        } else if (subType == 'notification' && that._isOnPublicGroup()) {
            var sid = msg.from;
            onemsg = '<div class="one-message system-msg">' + sid + ' 加入群聊' + '</div>'
        }
        //如果是图片,去掉<pre>标签
        if (onemsg.indexOf('chat-img') > 0) {
            onemsg = onemsg.replace('<pre>', '').replace('</pre>', '');
        }

        return onemsg
    };
    //在别人的项目的聊天窗口显示消息
    othersPushMsg(msg) {
        var that = this;
        var fromAccount = msg.from;
        var isSelfSend = false;//消息是否为自己发的
        var subType = msg.type;//消息类型
        var triangle, userhead, msghead;
        var onemsg = '';
        //群普通消息
        if (subType == 'text') {

            //查询消息成员的资料
            var memberInfo: any = that._getTempGroupMember(fromAccount);

            //如果是发标的客户 ==>姓做头像
            if (fromAccount == model.globalData.current_demand.user.id) {
                var name = model.globalData.current_demand.user.nick;
                var firName = name.substr(0, 1);
                userhead = '<span class="user-head-icon">' + firName + '</span>';
                //小三角
                triangle = '<img class="triangle" src="`{VIEWSURL}`/m/ChatRoomTpl/images/triangle.png">';
                msghead = '<div class="msgfrom-info">客户&nbsp;|&nbsp;' + name + '</div>';
                onemsg = '<div class="one-message self-msg">' + msghead + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>'

            } else {
                if (memberInfo) {
                    var src2 = memberInfo.avatar;
                    userhead = '<img class="user-head-icon" src="' + src2 + '"/>';

                    if (memberInfo.company_name) {
                        msghead = '<div class="msgfrom-info">' + memberInfo.nick + '<span class="msgfrom-company">&nbsp;|&nbsp;' + memberInfo.company_name + '</span></div>'
                    } else {
                        msghead = '<div class="msgfrom-info">' + memberInfo.nick + '</div>'
                    }

                } else if (!memberInfo && fromAccount != '3') {
                    userhead = '<img class="user-head-icon" head="' + fromAccount + '"/>';
                    msghead = '<div class="msgfrom-info" msghead="' + fromAccount + '"></div>';
                    //防止过快请求数据没有更新
                    setTimeout(function () {
                        that._getCurrentOthersGroup({
                            succ: function () {
                                memberInfo = that._getTempGroupMember(fromAccount);
                                var src = memberInfo.avatar;
                                $('.user-head-icon[head="' + fromAccount + '"]').attr('src', src);

                                var innerhtml;
                                if (memberInfo.company_name) {
                                    innerhtml = memberInfo.nick + '<span class="msgfrom-company">&nbsp;|&nbsp;' + memberInfo.company_name + '</span>';
                                } else {
                                    innerhtml = memberInfo.nick;
                                }
                                $('.user-head-icon[msghead="' + fromAccount + '"]').html(innerhtml);

                                console.log('更新参与的工程商信息成功')
                            }
                        });
                    }, 2000);
                }
                //小三角
                triangle = '<img class="triangle" src="`{VIEWSURL}`/m/ChatRoomTpl/images/triangle2.png">';

                onemsg = '<div class="one-message">' + msghead + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>'
            }


            //如果是万屏汇客服发的消息 , 默认头像
            if (fromAccount == '3') {
                var src3 = '`{VIEWSURL}`/m/ChatRoomTpl/images/xiaohui.png';
                userhead = '<img class="user-head-icon" src="' + src3 + '"/>';
                //小角标
                var vip = '<span class="icon-vip"></span>';
                msghead = '<div class="msgfrom-info">客服代表</div>';

                onemsg = '<div class="one-message">' + msghead + vip + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>'
            }


            //群提示消息
        } else if (subType == 'notification' && that._isOnPublicGroup()) {
            var sid = msg.from;
            onemsg = '<div class="one-message system-msg">' + sid + ' 加入群聊' + '</div>'
        }
        //如果是图片,去掉<pre>标签
        if (onemsg.indexOf('chat-img') > 0) {
            onemsg = onemsg.replace('<pre>', '').replace('</pre>', '');
        }

        return onemsg
    };
    //发送消息点击事件
    _evt_sendMsg() {
        var that = this;
        var text = $('#input').val();
        if (text.length > 0 && text.trim().length > 0) {
            $('#send').attr('disabled', 'disabled');
            webimConfigs.onSendMsg(text, {
                succ: function (msg) {
                    console.log('发送成功');
                    that.pushMsg(msg);
                    that._clearInput();
                    //清空草稿
                    funs.setSession("tmpmsg_" + nim.currSess, '');
                    if (that.selfDemandId == that.currDemandId) {
                        that._sendSmsToSupplier(msg)
                    }
                },
                fail: function (err) {

                }
            });
        }
    };
    //标的客户, 切换聊天对象
    _evt_clientChangeChat(data, obj) {
        var that = this;
        if (!$(obj).hasClass('active')) {
            $('.group-list').find('.active').removeClass('active');
            $(obj).addClass('active');

            var to_id = '';
            to_id = $(obj).attr('gid');
            var supplier_id = parseInt($(obj).attr('id'));
            //如果群存在
            if (to_id && to_id != '0') {
                that._saveDraft(to_id);
                that.switchSession(to_id);
            } else {
                //如果不存在,重新请求一次数据,防止数据过老
                that._getCurrentGroup({
                    succ: function () {
                        supplier_id = parseInt($(obj).attr('id'));
                        var sinfo: any = that._getCurrentGroupMember(supplier_id);
                        to_id = sinfo.demand_customer_supplier_im_group_outer_id;
                        if (to_id) {
                            that._saveDraft(to_id);
                            that.switchSession(to_id);
                        } else {
                            //不存在就创建群
                            var option = {
                                type: 'advanced',
                                name: that.selfDemandId + ':' + that.selfInfo.user_id,
                                accounts: [nim.account + '', supplier_id + ''],
                                joinMode: 'noVerify',
                                beInviteMode: 'noVerify',
                                inviteMode: 'all',
                                updateTeamMode: 'all',
                                updateCustomMode: 'all'
                            };
                            webimConfigs.createGroup(option, {
                                succ: function (obj) {
                                    console.log(obj);
                                    var gid = obj.team.teamId;
                                    that._saveDraft(gid);
                                    that.switchSession(gid);
                                    //将teamid传到后端b44接口保存
                                    var data = {
                                        group_id: gid,
                                        type: 103,
                                        val: that.selfDemandId,
                                        sub_val: supplier_id
                                    };
                                    api.SavePrivateGroup(data, function () {
                                        console.log("创建私聊群成功");
                                    }, function () {
                                        console.warn("创建私聊群失败");
                                    })
                                },
                                fail: function (err) {
                                    console.log('!!!!' + err)
                                }
                            })
                        }
                    }
                })
            }
        }
    };
    //获取当前标的群成员资料
    _getCurrentGroup(cb) {
        var that = this;
        var data = {
            demand_id: that.selfDemandId
        }
        var succ = function (json) {
            var gm = json.list;
            var j = gm.length;
            var online: any[] = [];
            var offline: any[] = [];
            for (var i = 0; i < j; i++) {
                //给"在线"和"不在线"的工程商 排序
                if (gm[i].online == '1') {
                    online.push(gm[i]);
                } else {
                    offline.push(gm[i]);
                }

                that.privateGroupList.push(gm[i].demand_customer_supplier_im_group_outer_id);
                var msgPool = webimConfigs.getPool();
                $.each(msgPool, function (key, value) {
                    if (key == gm[i].demand_customer_supplier_im_group_outer_id) {
                        gm[i].unread = value.unread;
                        gm[i].lastMsg = value.lastMsg.text || '';
                    }
                });
            }
            model.globalData.demand.supplier_list = online.concat(offline);

            //接受回调
            cb && cb.succ && cb.succ(json);
        }
        var fail = function () {
            cb && cb.fail && cb.fail();
        }
        api.GetDemandSupplier(data, succ, fail);
    };
    //获取当前标的群单个成员资料
    _getCurrentGroupMember(merberId) {
        var gm = model.globalData.demand.supplier_list;
        var j = gm.length;
        var mInfo: any = '';
        for (var i = 0; i < j; i++) {
            if (merberId == gm[i].id + "") {
                mInfo = gm[i];
                break;
            }
        }
        return mInfo
    };
    //获取当前会话的参与的工程商列表
    _getCurrentOthersGroup = function (cb) {
        var that = this;
        var data = {
            demand_id: that.tempDemandId
        }
        api.GetDemandSupplier(that.tempDemandId, function (json) {
            that.tempGroupInfo = json;
            //更新临时项目的参与的工程商列表
            model.globalData.current_demand.supplier_list = json.list;
            //接受回调
            cb && cb.succ && cb.succ(json);
        }
        )
    };
    //获取当前会话的群成员资料
    _getTempGroupMember(merberId) {
        var gm = model.globalData.current_demand.supplier_list;
        var j = gm.length;
        var mInfo: any = '';
        for (var i = 0; i < j; i++) {
            if (merberId == gm[i].id + "") {
                mInfo = gm[i];
                break;
            }
        }
        return mInfo
    };
    //查看私聊群是否群在
    _hasPrivateGroup(pid) {
        var list = this.privateGroupList;
        var flag = false;
        if (list.length > 0) {
            for (var i = 0, j = list.length; i < j; i++) {
                if (pid == list[i]) {
                    flag = true;
                }
            }
        }
        return flag
    };
    //查看私聊群工程商是否在线
    _getPrivateGroupInfo(pid) {
        var list = model.globalData.demand.supplier_list;
        var privateGroupInfo;
        for (var i = 0, j = list.length; i < j; i++) {
            if (pid == list[i].demand_customer_supplier_im_group_outer_id) {
                privateGroupInfo = list[i];
            }
        }
        return privateGroupInfo
    };
    //发送图片
    _evt_sendImg(data, obj) {
        this.find('#imgFile').trigger('click');
    };
    //清空输入框后发送按钮隐藏
    _clearInput() {
        this.find("#input").val('').css('height', '24px');
        this.find("#input").focus();
        this.find('#sendMsg').addClass("hide").removeAttr('disabled');
        this.find('.enclosure').removeClass('hide');
    };
    //如果客户在私聊群发消息,且工程商不在线,则发送短信
    _sendSmsToSupplier(msg) {
        var that = this;
        if (msg.to) {
            if (msg.to != that.selfChatRoomId && msg.to != that.selfProject.im_group.client_csad_im_group_outer_id) {
                var groupInfo = that._getPrivateGroupInfo(msg.to);
                if (groupInfo.online == 0) {
                    //发送成功后,更新工程商列表
                    that._getCurrentGroup({
                        succ: function () {
                            if (that._getPrivateGroupInfo(msg.to).online == 0) {
                                // has_chat ==> 是否已聊天，0：未聊天；1：已聊天；
                                var data = {
                                    "demand_id": that.selfDemandId,
                                    "supplier_id": groupInfo.id,
                                };
                                // api_ajax_post("sms/sms01", data, {
                                //     succ: function () {
                                //         console.log('发送提示短信成功')
                                //     }
                                // });
                            }
                        }
                    });
                }
            }
        }
    };
    // 保存草稿
    _saveDraft(toSel) {
        //保存当前的消息输入框内容到草稿
        var msgtosend = this.find('#input').val();
        var msgLen = msgtosend.trim().length;
        if (msgLen > 0) {
            funs.setSession("tmpmsg_" + nim.currSess, msgtosend);
        }
        //清空聊天界面
        $(".chat-pane").html('');
        //获取缓存的草稿内容
        var tmgmsgtosend = funs.getSession("tmpmsg_" + toSel);
        if (tmgmsgtosend) {
            this.find("#input").val(tmgmsgtosend);
        } else {
            this._clearInput();
        }
    };
    //重设聊天界面的高度
    _setChatHeight() {
        var phoneH = document.documentElement.clientHeight || $(window).height();
        var topBarH = this.find('.TopBar').innerHeight();
        var grabH = this.find('.details').innerHeight();
        var inputH = this.find('.input-pane').innerHeight();
        var merberH = this.find('.chat-member').not('.hide').innerHeight();
        var inquiryH = $('.tdom-footer').innerHeight();
        if (model.globalData.demand.id && model.globalData.demand.id != '0') {
            inquiryH = 0
        }
        var aaa;
        if (model.globalData.currIsSelfDemand) {
            aaa = phoneH - grabH - inputH - merberH - topBarH - 3;
        } else {
            aaa = phoneH - grabH - inquiryH - topBarH;
        }
        this.find('.chat-pane').css('height', aaa + 'px');
    };
    // 当前会话是否为公共聊天群
    _isOnPublicGroup() {
        return (this.webim.session == this.selfDemandId);
    }
    /*==============录音音频处理-start=============*/
    //录音播放暂停
    _evt_playPause(data, target) {
        var that = this;
        //如果录音加载失败
        var audioTime = this.find('.audio-time');
        var audio: any = document.getElementById("audioTag");
        if (audio.paused) {
            audio.play();
            //改变icon
            $(target).find('span').removeClass('icon-play-one').addClass('icon-pause-one')
        } else {
            audio.pause();
            $(target).find('span').removeClass('icon-pause-one').addClass('icon-play-one')
        }

        //监听音频播放时间并更新进度条
        audio.addEventListener('timeupdate', that.updateProgress, false);
        //监听播放完成事件
        audio.addEventListener('ended', that.audioEnded, false);
    };

    //更新进度条
    updateProgress() {
        var audio = document.getElementsByTagName('audio')[0];
        this.find('.audio-time').html(this.transTime(audio.duration - audio.currentTime));
    }
    //播放完成
    audioEnded() {
        var audio = document.getElementsByTagName('audio')[0];
        audio.currentTime = 0;
        audio.pause();
        this.find('.play-pause>span').removeClass('icon-pause-one').addClass('icon-play-one');
    }
    //转换音频时长格式
    transTime(time) {
        var duration = parseInt(time);
        var minute: any = Math.floor(duration / 60);
        var sec = duration % 60 + '';
        var isM0 = ':';
        if (minute == 0) {
            minute = '00';
        } else if (minute < 10) {
            minute = '0' + minute;
        }
        if (sec.length == 1) {
            sec = '0' + sec;
        }
        return minute + isM0 + sec
    }
    /*==============录音音频处理-end=============*/

    /*==============预算金额处理-start=============*/
    //更改预算金额显示
    setBudget() {
        var money: any = this.find('.format-budget').attr('budget');
        money = this.std_money_format_in_th(money);
        if (money.budget == "" || money.budget == 0) {
            money.budget = "议价";
        }
        this.find('.format-budget').html(money.budget).next('.budget-unit').html(money.unit);
    }
    //处理金额数值
    std_money_format_in_th(money) {
        money = money + "";
        var intLen = money.split('.')[0].length;
        if (intLen > 4) {
            return { "budget": this.std_num_format(money / 10000), "unit": "万" }
        } else if (intLen > 3) {
            return { "budget": this.std_num_format(money / 1000), "unit": "千" }
        } else if (intLen > 2) {
            return { "budget": this.std_num_format(money / 100), "unit": "百" }
        } else {
            return { "budget": money, "unit": "" };
        }
    }
    std_num_format(num) {
        num += '';
        var parts = num.split('.');
        var float_cnt = 0;
        if (parts.length > 1) {
            var deci = parts[1];
            float_cnt = (parseInt(deci) > 0) ? deci.length : 0;
        }

        var pureRes = this.number_format(num, Math.min(2, float_cnt));
        var ptIndex = pureRes.indexOf('.');
        if (ptIndex === -1) {
            // 整数
            return pureRes;
        } else {
            // 下面这些处理，是为了死也要保证小数点后末尾不能为0。即使这是不科学的四舍五入，产品及相关人员也认为这比科学要更好。好吧，我妥协
            var num: any = parseInt(pureRes.substr(ptIndex + 1));
            if (0 === num) {
                // 123.00型
                return pureRes.substr(0, ptIndex);
            } else if (0 === num % 10) {
                // 123.40型
                return pureRes.substr(0, pureRes.length - 1);
            } else {
                return pureRes;
            }
        }
    }
    number_format(number, decimals, decPoint?, thousandsSep?) { // eslint-disable-line camelcase

        number = (number + '').replace(/[^0-9+\-Ee.]/g, '')
        var n = !isFinite(+number) ? 0 : +number
        var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)
        var sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep
        var dec = (typeof decPoint === 'undefined') ? '.' : decPoint
        var s: any = '';
        var toFixedFix = function (n, prec) {
            var k = Math.pow(10, prec)
            return '' + (Math.round(n * k) / k)
                .toFixed(prec)
        }
        // @todo: for IE parseFloat(0.55).toFixed(0) = 0;
        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.')
        if (s[0].length > 3) {
            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep)
        }
        if ((s[1] || '').length < prec) {
            s[1] = s[1] || ''
            s[1] += new Array(prec - s[1].length + 1).join('0')
        }

        return s.join(dec)
    }
    /*==============预算金额处理-end=============*/

    /**询价条 */
    public init() {
        return tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/project/InquiryLayer'), (InquiryLayer) => { this.footer = InquiryLayer; })
    }
    public getFooter() {
        var did = model.globalData.demand.id;
        if (did && did != '0') {
            return null;
        } else {
            return this.footer.view;
        }
    }
    //点击查看大图
    _evt_scanBig = function (data, obj) {
        var src = $(obj).attr('src');
        var width = $(obj).width();
        var height = $(obj).height();
        var rate = width / height;//宽高比
        var hh = $(window).width();//大图的宽 == 屏幕宽度
        var bgh = hh / rate / 2;  // 计算出大图的高度 de 一半

        //dom插入
        var bigImg = '<div class="bigImgBg" evt="closeBigImg"><img class="bigImg" src="' + src + '"/></div>';
        $(this.view).append(bigImg);

        //让图片垂直居中
        $('.bigImg').css('margin-top', -bgh + 'px');
    };
    _evt_closeBigImg = function (data, obj) {
        $(obj).remove();
    };
}
export = VPresenter;