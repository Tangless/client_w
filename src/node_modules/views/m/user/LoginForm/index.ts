import * as tomato from "@po-to/tomato";
import * as project from "views/global/common/Project";
import * as Vue from "vue";
import * as model from "views/global/common/Model";
import * as api from "views/global/common/API";
import * as funs from 'views/global/common/Funs';

class VPresenter extends project.VPresenter {
    /**模块 */
    private LoginForm_vue: any;
    /**手机号 */
    private _phone: JQuery;
    /**验证码 */
    private _code: JQuery;
    /**有项目未完成时提示 */
    private _inquiryTips: JQuery;
    /**手机号状态图标 */
    private _phoneCheck: JQuery;
    /**错误提示 */
    private _codeCheck: JQuery;
    /**登录按钮 */
    private _login: JQuery;
    /**获取验证码按钮 */
    private _getCaptcha: JQuery;
    /**验证码是否可以再次发送 */
    private _flag: boolean;
    /**登录判断是否新用户 */
    private _isCallPublish: boolean;

    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        var vueDom = this.find("#LoginForm_vue").get(0);
        var user = model.globalData.user;
        let LoginForm_vue: any = this.LoginForm_vue = new Vue({
            el: vueDom,
            data: {
                user: user,
                code: '',
                message: '',
                showIcon: false,
                showError: false,
                seen: false,
                isActive: false,
                clicked: true
            },
            watch: {
                'user.phone': "checkInfo",
                code: "checkInfo",
            },
            methods: {
                //检验必填项
                checkInfo: function () {
                    if (LoginForm_vue.user.phone && LoginForm_vue.code) {
                        LoginForm_vue.clicked = false;
                    } else {
                        LoginForm_vue.clicked = true;
                    }
                }
            }
        })
        this._phone = this.find(".phone");
        this._code = this.find(".code");
        this._inquiryTips = this.find(".inquiry-tips");
        this._phoneCheck = this.find(".phone-check");
        this._codeCheck = this.find(".code-check");
        this._login = this.find("#login_button");
        this._getCaptcha = this.find(".getcode");
        this._flag = true;
        this._isCallPublish = false;
        let that = this;
        //重新编辑手机号时，错误提示取消
        this._phone.bind("input propertychange", function () {
            LoginForm_vue.showIcon = false;
            LoginForm_vue.showError = false;
        });
        //失去焦点自动检测手机号，并发送验证码
        this._phone.on("blur", () => {
            //如果手机号正确，自动发送验证码请求
            if (that._check_phone(LoginForm_vue.user.phone) && that._flag) {
                //发送验证码
                that._evt_getCode();
            }
        });
        //验证码变化时，检测手机号
        this._code.bind("input propertychange", function () {
            if (that._check_phone(LoginForm_vue.user.phone)) {
                LoginForm_vue.showError = false;
            } else {
                LoginForm_vue.showError = true;
            }
        });
        //失去焦点检测验证码
        this._code.blur(function () {
            if (LoginForm_vue.code == 0 && that._check_phone(LoginForm_vue.user.phone)) {
                LoginForm_vue.showError = true;
                LoginForm_vue.message = "验证码不能为空";
            }
        });


        this._watchEvent();

    }
    //询价进来初始化
    public login_init(phone) {
        this._flag = false;
        //从询价接口进来时的初始化
        if (phone) {
            this.LoginForm_vue.seen = true;
            this._check_phone(phone);
        } else {
            this.LoginForm_vue.seen = false;
        }
        // 倒计时
        this.codeCountDown();
    }
    // 倒计时
    private codeCountDown() {
        var that = this;
        this._getCaptcha.css("color", "#b3b5b7");
        this._getCaptcha.html('60s后重新获取').prop('disabled', true);
        var wait = 60;
        var timer = setInterval(function () {
            wait--;
            that._getCaptcha.html(wait + 's后重新获取');
            if (wait < 1) {
                clearInterval(timer);
                this.timer = null;
                that._getCaptcha.html('重新获取验证码').prop('disabled', false);
                that._getCaptcha.css("color", "#4785f9");
                that._flag = true;
            }
        }, 1000)
    }
    //检测手机号
    private _check_phone(usrName: string): boolean {
        if (!usrName) {
            this.LoginForm_vue.showIcon = true;
            this.LoginForm_vue.isActive = false;
            this.LoginForm_vue.showError = true;
            this.LoginForm_vue.message = "手机号不能为空";
            return false;
        } else if (!this._checkPhone(usrName)) {
            this.LoginForm_vue.showIcon = true;
            this.LoginForm_vue.isActive = false;
            this.LoginForm_vue.showError = true;
            this.LoginForm_vue.message = "请填写正确的手机号";
            return false;
        } else {
            this.LoginForm_vue.showIcon = true;
            this.LoginForm_vue.isActive = true;
            this.LoginForm_vue.showError = false;
            return true;
        }
    }
    //正则检测手机号
    private _checkPhone(phone: string): boolean {
        if (!(/^1(3|4|5|7|8)\d{9}$/.test(phone))) {
            return false;
        }
        return true;
    }
    //发送验证码
    private _evt_getCode() {
        let phone = this.LoginForm_vue.user.phone
        let that = this;
        if (this._check_phone(phone)) {
            that._flag = false;
            //a02发送手机验证码接口
            api.SendSmsCaptcha(phone, function (json) {
                // 倒计时
                that.codeCountDown();
            }, function (error) {
                that.LoginForm_vue.showError = true;
                that.LoginForm_vue.message = "在60秒内，不能重复发送短信验证码";
                that._getCaptcha.html('获取验证码').prop('disabled', false);
                that._getCaptcha.css("color", "#b3b5b7");
                that._flag = true;
            });
        }
    }
    //提交表单
    _evt_submitForm(data, target) {
        let role = 1;
        let phone = this.LoginForm_vue.user.phone
        let code = this.LoginForm_vue.code;
        let that = this;
        if (this._check_phone(phone) && code) {

            api.Login(phone, code, function (data:any) {
                
                //登录成功,刷新页面
                window.location.reload();

            }, function (error) {
                that.LoginForm_vue.showError = true;
                that.LoginForm_vue.message = "验证码有误，请重新输入";
            });
        }
        return false;
    };
}
export = VPresenter;