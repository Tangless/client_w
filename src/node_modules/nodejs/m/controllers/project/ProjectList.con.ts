import * as potato from '@po-to/potato';
import * as api from "nodejs/global/api/api";
import * as demand from 'nodejs/global/model/demand';

class Controller extends potato.Controller {
    
    Item(request: potato.Request, resolve: (data: Object | potato.ViewRendererData) => void, reject: (error: potato.PError) => void) {
        api.GetDemandListByTypes([1,2,3,4,5],request.root).then(function(list){
            let total = list[0].concat(list[1],list[2],list[3],list[4]);
            let projectList = list.map(function(arr){
                let typeName:string='';
                let doubleList:{double:{demand:demand.DemandInfo}[]}[] = [];
                while(arr.length){
                    let double:{demand:demand.DemandInfo}[] = [];
                    doubleList.push({double:double});
                    double.push({demand:(arr.shift() as demand.DemandInfo)});
                    typeName = double[0].demand.type_name;
                    if(arr.length){
                        double.push({demand:(arr.shift() as demand.DemandInfo)});
                    }
                }
                return {
                    title: typeName,
                    list: doubleList
                }                
            })
            let data = request.createViewRenderData({ data: projectList, originData: JSON.stringify(total) });
            let template = new potato.View('m/project/ProjectListTpl');
            let result = new potato.ViewRendererData(template, data);
            resolve(result);
        }).catch(reject);
    }
}

let ins: Object = new Controller();
export = ins;